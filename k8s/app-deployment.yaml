apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: ecommerce
    tier: backend
spec:
  replicas: 1  # Starting with 1 to match Docker Compose
  selector:
    matchLabels:
      app: ecommerce
      tier: backend
  template:
    metadata:
      labels:
        app: ecommerce
        tier: backend
    spec:
      containers:
      - name: backend
        image: ecommerce-app-backend:latest  # Matching your local image
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_RUN_HOST
          value: "0.0.0.0"
        - name: FLASK_RUN_PORT
          value: "5000"
        - name: FLASK_DEBUG
          value: "true"
        - name: DB_HOST
          value: "ecommerce-db"
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: DB_NAME
          value: "ecommerce"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: flask-secrets
              key: secret_key
        - name: SESSION_TYPE
          value: "filesystem"
        - name: SESSION_FILE_DIR
          value: "/tmp/flask_sessions"
        volumeMounts:
        - name: flask-sessions
          mountPath: /tmp/flask_sessions
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: flask-sessions
        emptyDir: {}  # For Flask sessions